[{"/Users/liyuqi/public_speaking_visualisation/frontend/src/index.js":"1","/Users/liyuqi/public_speaking_visualisation/frontend/src/App.js":"2","/Users/liyuqi/public_speaking_visualisation/frontend/src/reportWebVitals.js":"3","/Users/liyuqi/public_speaking_visualisation/frontend/src/voice.js":"4","/Users/liyuqi/public_speaking_visualisation/frontend/src/Questionnaire.js":"5","/Users/liyuqi/public_speaking_visualisation/frontend/src/HomePage.js":"6","/Users/liyuqi/public_speaking_visualisation/frontend/src/Text.js":"7","/Users/liyuqi/public_speaking_visualisation/frontend/src/reload.js":"8","/Users/liyuqi/public_speaking_visualisation/frontend/src/VideoContext.js":"9","/Users/liyuqi/public_speaking_visualisation/frontend/src/WordCloud.js":"10","/Users/liyuqi/public_speaking_visualisation/frontend/src/Slider.js":"11","/Users/liyuqi/public_speaking_visualisation/frontend/src/login.js":"12","/Users/liyuqi/public_speaking_visualisation/frontend/src/TopBar.js":"13","/Users/liyuqi/public_speaking_visualisation/frontend/src/register.js":"14","/Users/liyuqi/public_speaking_visualisation/frontend/src/Compare.js":"15","/Users/liyuqi/public_speaking_visualisation/frontend/src/compareWith.js":"16","/Users/liyuqi/public_speaking_visualisation/frontend/src/Step.js":"17","/Users/liyuqi/public_speaking_visualisation/frontend/src/profile.js":"18"},{"size":535,"mtime":1700605509000,"results":"19","hashOfConfig":"20"},{"size":1800,"mtime":1709260499617,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1700605498000,"results":"22","hashOfConfig":"20"},{"size":13394,"mtime":1709667054859,"results":"23","hashOfConfig":"20"},{"size":9597,"mtime":1708967207545,"results":"24","hashOfConfig":"20"},{"size":1351,"mtime":1708968773880,"results":"25","hashOfConfig":"20"},{"size":17111,"mtime":1709668264833,"results":"26","hashOfConfig":"20"},{"size":832,"mtime":1706662530000,"results":"27","hashOfConfig":"20"},{"size":792,"mtime":1709095556842,"results":"28","hashOfConfig":"20"},{"size":1459,"mtime":1707857725000,"results":"29","hashOfConfig":"20"},{"size":1234,"mtime":1708350685000,"results":"30","hashOfConfig":"20"},{"size":2891,"mtime":1709090139157,"results":"31","hashOfConfig":"20"},{"size":7167,"mtime":1709263976803,"results":"32","hashOfConfig":"20"},{"size":4030,"mtime":1708482101286,"results":"33","hashOfConfig":"20"},{"size":5021,"mtime":1709095716727,"results":"34","hashOfConfig":"20"},{"size":27678,"mtime":1709093009873,"results":"35","hashOfConfig":"20"},{"size":3968,"mtime":1709096285014,"results":"36","hashOfConfig":"20"},{"size":3149,"mtime":1709263889581,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17shlox",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/liyuqi/public_speaking_visualisation/frontend/src/index.js",[],[],"/Users/liyuqi/public_speaking_visualisation/frontend/src/App.js",[],[],"/Users/liyuqi/public_speaking_visualisation/frontend/src/reportWebVitals.js",[],[],"/Users/liyuqi/public_speaking_visualisation/frontend/src/voice.js",["95"],[],"/Users/liyuqi/public_speaking_visualisation/frontend/src/Questionnaire.js",["96"],[],"/Users/liyuqi/public_speaking_visualisation/frontend/src/HomePage.js",["97"],[],"/Users/liyuqi/public_speaking_visualisation/frontend/src/Text.js",["98"],[],"import  './voice.css';\nimport {useContext, useEffect, useState} from \"react\";\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport Typography from '@mui/material/Typography';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport CardContent from \"@mui/material/CardContent\";\nimport Card from \"@mui/material/Card\";\nimport CircularProgress from '@mui/material/CircularProgress';\nimport axios from \"axios\";\nimport Box from \"@mui/material/Box\";\nimport {Divider, Tooltip,} from \"@mui/material\";\nimport Alert from \"@mui/material/Alert\";\nimport Stack from \"@mui/material/Stack\";\nimport {useNavigate} from \"react-router-dom\";\nimport VideoContext from \"./VideoContext\";\nimport WordCloud from \"./WordCloud\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport Button from \"@mui/material/Button\";\nimport './text.css'\nimport Slider from \"./Slider\";\nimport IconButton from \"@mui/material/IconButton\";\nimport HelpOutlineIcon from \"@mui/icons-material/HelpOutline\";\n// import TranscriptContext from \"./TranscriptContext\";\n\n\nconst Text = () => {\n    const {videoUUID } = useContext(VideoContext);\n     const auth = JSON.parse(sessionStorage.getItem('auth'));\n\n    const[title, setTitle] = useState('');\n    const[isLoading, setIsLoading] = useState(false);\n    const[transcript, setTranscript] = useState('');\n    const[simple, setSimple] = useState([]);\n    const[diff, setDiff] = useState([]);\n    const[simpleShow, setSimpleShow] = useState([]);\n    const[diffShow, setDiffShow] = useState([]);\n    const[wordPlot, setWordPlot] = useState('');\n    const[speedPlot, setSpeedPlot] = useState('');\n    const[sentenceLength, setSentenceLength] = useState('');\n    const[length, setLength] = useState('');\n    const[aSpeed, setaSpeed] = useState('');\n\n    const [alertVisible, setAlertVisible] = useState(true);\n    const navigate = useNavigate();\n    const [open, setOpen] = useState(false);\n\n\n\n   useEffect(() => {\n        if (videoUUID) {\n            setIsLoading(true);\n            axios(`http://127.0.0.1:5000/text?uuid=${videoUUID}&email=${auth?.email || ''}`, {\n                withCredentials: true,\n            })\n                .then(response =>{\n                   setTitle(response.data.title);\n                   setTranscript(response.data.transcript);\n                   const simpleArray = typeof response.data.simple === 'string' ? response.data.simple.split(\" \") : Array.isArray(response.data.simple) ? response.data.simple : [];\n                   setSimple(simpleArray);\n                   const diffArray = typeof response.data.difficult === 'string' ? response.data.difficult.split(\" \") : Array.isArray(response.data.difficult) ? response.data.difficult : [];\n                   setDiff(diffArray);\n                   setSimpleShow(response.data.simple_show);\n                   setDiffShow(response.data.diff_show);\n                   setWordPlot(response.data.word_plot);\n                   setSpeedPlot(response.data.speed_plot);\n                   setSentenceLength(response.data.sentence_length);\n                   setLength(response.data.total_length);\n                   setaSpeed(response.data.average_speed);\n                })\n                .catch(error => {\n                    console.error('Error:', error);\n                    navigate('/reload');\n                    setSimple([]);\n                    setDiff([]);\n                })\n             .finally(() => {\n                    setIsLoading(false);\n                });\n        }\n         else{\n            navigate('/reload');\n        }\n    }, [navigate, videoUUID]);\n\n     if (isLoading) {\n        return (\n            <Box sx={{display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '100vh',\n                width: '100vw'}}>\n                <CircularProgress />\n                <Typography sx={{ mt: 2 }}>Usually takes <strong>3 - 5 minutes</strong> to load (Related to the length of the video)</Typography>\n            </Box>\n  );\n    }\n     const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const homepage = () =>{\n         navigate('/');\n     };\n\n     const voice = () =>{\n         navigate(`/voice?uuid=${videoUUID}&email=${auth?.email || ''}`);\n     };\n  return (\n      <>\n          <Stack sx={{ width: '100%' }} spacing={5}>\n              {alertVisible &&(\n              <Alert severity=\"warning\"\n                     onClose={() => {setAlertVisible(false)}}>\n                  Notice: The video will only be saved for <strong>2 hours</strong>, please check it out as soon as possible! </Alert>\n                  )}\n\n          </Stack>\n           <Dialog open={open} onClose={handleClose} aria-describedby=\"alert-dialog-description\">\n                              <DialogContent>\n                                  <DialogContentText id=\"alert-dialog-description\">\n                                      <p style={{fontSize: '22px'}}><strong>Frequent Word:</strong></p>\n                                      <div className=\"word-grid\">\n                                          {simple.map((word, index) => (\n                                              <div className=\"word-item\" key={index}>\n                                                  {word}\n                                              </div>\n                                          ))}\n                                      </div>\n                                      <p style={{fontSize: '22px'}}><strong>Rare Word:</strong></p>\n                                      <div className=\"word-grid\">\n                                          {diff.map((word, index) => (\n                                              <div className=\"word-item\" key={index}>\n                                                  {word}\n                                              </div>\n                                          ))}\n                                      </div>\n                                  </DialogContentText>\n                              </DialogContent>\n                              <DialogActions>\n                                  <Button onClick={handleClose} autoFocus>Close</Button>\n                              </DialogActions>\n                          </Dialog>\n          <div>\n              <div className=\"video-card\">\n                  <Card sx={{ maxWidth: '80%', marginTop: 5, width: 'auto'}}>\n                      <CardContent>\n                          <video width=\"100%\" controls>\n                              {title &&<source src={`/static/${title}`} type=\"video/mp4\" />}\n                              Your browser does not support the video tag.\n                          </video>\n                      </CardContent>\n                  </Card>\n              </div>\n              <Accordion defaultExpanded style={{marginTop: 15}}>\n                  <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\n                      <Typography style={{fontSize: '30px'}}>Summary</Typography>\n                  </AccordionSummary>\n                  <Divider style={{ margin: '10px 18px' }} />\n                  <AccordionDetails width = '100%' style={{display: 'flex'}}>\n                      <div style={{ textAlign: 'center', marginLeft: '120px', marginRight: '150px' ,alignItems: \"center\", justifyContent: \"center\", marginTop: '20px'}}>\n                          <Typography variant=\"subtitle1\" color=\"textSecondary\"style={{fontSize:'25px', marginBottom: \"18px\"}}>\n                              Word Counts\n                          </Typography>\n                          <Typography variant=\"h6\">\n                              {length} Words\n                          </Typography>\n                      </div>\n\n                      <div style={{ textAlign: 'center', marginRight: '100px', alignItems: \"center\", justifyContent: \"center\", marginTop: '20px'}}>\n                          <Typography color=\"textSecondary\" style={{fontSize:'25px' ,marginBottom: \"20px\"}}>\n                              Average Speed of Speech\n                          </Typography>\n                          <Typography variant=\"h6\">\n                              {aSpeed} words / Mins\n                          </Typography>\n                      </div>\n\n                       <div style={{ textAlign: 'center', marginTop: '20px', alignItems: \"center\", justifyContent: \"center\"}}>\n                           <Typography variant=\"subtitle1\" color=\"textSecondary\" style={{fontSize:'25px', marginBottom: \"20px\"}}>\n                              Sentence Length\n                          </Typography>\n                          <Typography>\n                              <Slider value1 = {sentenceLength} value2= '37' />\n                          </Typography>\n                      </div>\n                  </AccordionDetails>\n              </Accordion>\n\n              <Accordion defaultExpanded>\n                  <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel2a-content\" id=\"panel2a-header\">\n                      <Typography style={{fontSize: '30px'}}>Transcript</Typography>\n                  </AccordionSummary>\n                  <Divider style={{ margin: '10px 18px' }} />\n                  <AccordionDetails>\n                      <p>{transcript}</p>\n                  </AccordionDetails>\n              </Accordion>\n\n              <Accordion defaultExpanded>\n                  <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel2a-content\" id=\"panel2a-header\">\n                      <Typography style={{fontSize: '30px'}}>Word Usage</Typography>\n                  </AccordionSummary>\n                  <AccordionDetails style={{ display: 'flex', flexDirection: 'column', justifyContent: 'space-between' }}>\n                      <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-around', alignItems: 'center' }}>\n                          <div style={{ flex: 1, textAlign: 'center' }}>\n                              <Typography  color = 'black' style={{ display: 'flex', justifyContent: 'center' , fontSize: '25px'}}>\n                                  Proportion\n                              </Typography>\n                              <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n                                  <Typography>\n                                      {wordPlot && <img src={`data:image/png;base64,${wordPlot}`} alt=\"Generated Plot\" style={{ maxWidth: '100%', maxHeight: '300px' }}/>}\n                                  </Typography>\n                                  <div style={{ display: 'flex', alignItems: 'center', marginRight: '20px' }}>\n                                      <div style={{\n                                          width: '10px',\n                                          height: '10px',\n                                          backgroundColor: 'grey',\n                                          marginRight: '5px',\n                                          }}>\n                                      </div>\n                                      <Typography variant=\"body2\">Frequent Word Percentage</Typography>\n                                  </div>\n\n                                  <div style={{ display: 'flex', alignItems: 'center' }}>\n                                      <div style={{\n                                          width: '10px',\n                                          height: '10px',\n                                          backgroundColor: 'orange',\n                                          marginRight: '5px',\n                                          marginTop: '5px'\n                                          }}>\n                                      </div>\n                                      <Typography variant=\"body2\">Rare Word Percentage</Typography>\n                                  </div>\n                              </div>\n                          </div>\n\n                          <div style={{ flex: 1, textAlign: 'center', marginRight: '30px', alignItems: 'center', justifyContent: 'center' }}>\n                              <Typography variant=\"subtitle1\" color=\"black\" style={{fontSize:'25px'}}>\n                                  Frequent Word\n                              </Typography>\n                              <Typography>\n                                 <WordCloud words={simpleShow} />\n                              </Typography>\n                          </div>\n\n                          <div style={{ flex: 1, textAlign: 'center', marginRight: '30px', alignItems: 'center', justifyContent: 'center' }}>\n                              <Typography variant=\"subtitle1\" color=\"black\" style={{fontSize:'25px'}}>\n                                  Rare Word\n                              </Typography>\n                              <Typography>\n                                  <WordCloud words={diffShow} />\n                              </Typography>\n                          </div>\n                      </div>\n\n                      <div style={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'flex-end', width: '100%', marginTop: '20px' }}>\n                          <Button variant=\"text\" style={{ margin: '10px', fontSize:'16px'}} onClick={handleOpen}>\n                              See ALL Words\n                          </Button>\n                      </div>\n\n                </AccordionDetails>\n              </Accordion>\n\n               <Accordion defaultExpanded>\n                  <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel2a-content\" id=\"panel2a-header\">\n                      <Typography style={{fontSize: '30px'}}>Speed of Speech\n                          <Tooltip title={\n                             <Typography style={{ fontSize: '1rem' }}>\n                                  If your speaking rate is too slow, it might bore or disengage your audience.\n                                 Increase your pace by practicing with timed speeches and focusing on key points.\n                                 For a rate that's too fast, leading to comprehension issues, practice slowing down and enunciating clearly.\n                             </Typography>} arrow\n                                  sx={{\n                                      '.MuiTooltip-tooltip': {\n                                          backgroundColor: 'gray',\n                                          color: 'white',\n                                          fontSize: '1rem',\n                                          padding: '16px 20px',\n                                      }\n                         }}\n                         >\n                              <IconButton aria-label=\"help\">\n                                  <HelpOutlineIcon />\n                              </IconButton>\n                          </Tooltip>\n                      </Typography>\n                  </AccordionSummary>\n                  <Divider style={{ margin: '10px 18px' }} />\n                  <AccordionDetails>\n                      <Typography variant=\"body1\" style={{ marginBottom: '10px', display: 'flex', alignItems: 'center'}}>\n                           <svg width=\"80\" height=\"10\" style={{ marginRight: '10px' }}>\n                               <line x1=\"30\" y1=\"5\" x2=\"80\" y2=\"5\" stroke=\"green\" strokeDasharray=\"5, 5\" strokeWidth={2}/>\n                           </svg>\n                           Your Average (per Minutes)\n                            <div style={{\n                                width: '50px',\n                                height: '25px',\n                                backgroundColor: '#d2e3f0',\n                                marginLeft: '30px',\n                                marginRight:'10px'\n                                }}>\n                            </div>\n                           Recommended Range (per Minutes)\n                       </Typography>\n                      <Divider style={{ margin: '10px 10px' }} />\n                      <Typography width={'50%'}>\n                           {speedPlot && <img src={`data:image/png;base64,${speedPlot}`} alt=\"Generated Plot\"/>}\n                      </Typography>\n                  </AccordionDetails>\n              </Accordion>\n               <div style={{ marginTop: '40px', width: '100%', bottom: 0, display: 'flex', justifyContent: 'space-between', marginBottom: '20px'}}>\n                   <Button variant=\"contained\" onClick={homepage} style={{marginLeft: '10px'}}> Go back to Home</Button>\n                  <Button variant=\"contained\" onClick={voice} style={{marginRight: '10px'}}>Go to Voice page</Button>\n              </div>\n          </div>\n      </>\n  );\n}\nexport default Text;","/Users/liyuqi/public_speaking_visualisation/frontend/src/reload.js",[],[],"/Users/liyuqi/public_speaking_visualisation/frontend/src/VideoContext.js",[],[],"/Users/liyuqi/public_speaking_visualisation/frontend/src/WordCloud.js",["99"],[],"/Users/liyuqi/public_speaking_visualisation/frontend/src/Slider.js",[],[],"/Users/liyuqi/public_speaking_visualisation/frontend/src/login.js",["100"],[],"/Users/liyuqi/public_speaking_visualisation/frontend/src/TopBar.js",["101"],[],"import './App.css';\n\nimport {useNavigate} from 'react-router-dom';\nimport VideoContext from './VideoContext';\n\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Menu from '@mui/material/Menu';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Container from '@mui/material/Container';\nimport Button from '@mui/material/Button';\nimport MenuItem from '@mui/material/MenuItem';\nimport {useContext, useEffect, useState} from \"react\";\n\nfunction TopBar({ auth, user, setAuth}) {\n    const { videoUUID, setVideoUUID } = useContext(VideoContext);\n    const storedAuth = JSON.parse(sessionStorage.getItem('auth'));\n    const [anchorElNav, setAnchorElNav] = useState(null);\n    const [anchorElUser, setAnchorElUser] = useState(null);\n    const [username, setUsername] = useState('');\n    const open = Boolean(anchorElUser);\n    const navigate = useNavigate();\n\n    const basePages = ['Homepage'];\n    const pages = videoUUID ? [...basePages, 'Voice', 'Text', 'Compare'] : basePages;\n\n\n    const recoverAuthState = () => {\n        if (storedAuth) {\n            const currentTime = new Date().getTime();\n            const elapsed = (currentTime - storedAuth.timestamp) / (1000 * 60 * 60);\n            if (storedAuth.loggedIn && elapsed < 2) {\n                setAuth(true);\n                setUsername(storedAuth.username);\n            } else {\n                sessionStorage.removeItem('auth');\n                }\n  }\n};\n\n\n    useEffect(() => {\n        recoverAuthState();\n        }, [recoverAuthState]);\n\n  const handleLogout = async () => {\n      setAuth(false, '', '');\n      sessionStorage.removeItem('auth');\n      sessionStorage.removeItem('videoUUID');\n      alert(\"Successful Log Out\");\n      navigate('/');\n};\n  const handleLoginClick = () => {\n    sessionStorage.removeItem('auth');\n    sessionStorage.removeItem('videoUUID');\n    navigate('/login');\n  };\n\n  const handleRegisterClick = () => {\n      sessionStorage.removeItem('auth');\n      sessionStorage.removeItem('videoUUID');\n      navigate('/register');\n  };\n\n  const navigateToPage = (page) => {\n    if (page === 'Homepage') {\n        sessionStorage.removeItem('videoUUID');\n        setVideoUUID(null);\n        navigate('/');\n    }\n    else{\n        const route = page.toLowerCase();\n        navigate(`/${route}?uuid=${videoUUID}&email=${storedAuth?.email || ''}`);\n    }\n  };\n\n  const handleOpenNavMenu = (event) => {\n    setAnchorElNav(event.currentTarget);\n  };\n  const handleOpenUserMenu = (event) => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n\n\n\n  return (\n    <AppBar position=\"static\">\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"a\"\n            href = '/'\n            sx={{\n              mr: 2,\n              display: { xs: 'none', md: 'flex' },\n              fontFamily: 'monospace',\n              fontWeight: 700,\n              letterSpacing: '.3rem',\n              color: 'inherit',\n              textDecoration: 'none',\n            }}\n          >\n            SpeakTrainer\n          </Typography>\n\n          <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n            <IconButton\n              size=\"large\"\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleOpenNavMenu}\n              color=\"inherit\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorElNav}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'left',\n              }}\n              open={Boolean(anchorElNav)}\n              onClose={handleCloseNavMenu}\n              sx={{\n                display: { xs: 'block', md: 'none' },\n              }}\n            >\n              {pages.map((page) => (\n                <MenuItem key={page} onClick={() => { handleCloseNavMenu(); navigateToPage(page); }}>\n                  <Typography textAlign=\"center\">{page}</Typography>\n                </MenuItem>\n              ))}\n            </Menu>\n          </Box>\n          <Typography\n            variant=\"h5\"\n            noWrap\n            component=\"a\"\n            href='/'\n            sx={{\n              mr: 2,\n              display: { xs: 'flex', md: 'none' },\n              flexGrow: 1,\n              fontFamily: 'monospace',\n              fontWeight: 700,\n              letterSpacing: '.3rem',\n              color: 'inherit',\n              textDecoration: 'none',\n            }}\n          >\n            SpeakTrainer\n          </Typography>\n          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n            {pages.map((page) => (\n              <Button\n                key={page}\n                onClick={() => { handleCloseNavMenu(); navigateToPage(page); }}\n                sx={{ my: 2, color: 'white', display: 'block' }}\n              >\n                {page}\n              </Button>\n            ))}\n          </Box>\n\n          <Box sx={{ flexGrow: 0 }}>\n              {auth ? (\n                    <div>\n                        <Button onClick={handleOpenUserMenu} sx ={{fontSize: \"16px\", color: 'white'}}>Welcome:\n                            <span style={{ fontSize: \"18px\", fontWeight: 'bold' }}>{username}</span>\n                        </Button>\n                        <Menu\n                            id=\"menu-appbar\"\n                            anchorEl={anchorElUser}\n                            anchorOrigin={{\n                                vertical: 'top',\n                                horizontal: 'right',\n                            }}\n                            keepMounted\n                            transformOrigin={{\n                                vertical: 'top',\n                                horizontal: 'right',\n                            }}\n                            open={open}\n                            onClose={handleCloseUserMenu}\n                        >\n                            <MenuItem onClick={() => {handleCloseUserMenu(); navigate(`/profile?email=${storedAuth?.email || ''}`);}}>Profile</MenuItem>\n                            <MenuItem onClick={handleLogout}>Logout</MenuItem>\n                        </Menu>\n                    </div>\n                ) : (\n                    <div>\n                        <Button color=\"inherit\" onClick={handleLoginClick}>Login</Button>\n                        <Button color=\"inherit\" onClick={handleRegisterClick}>Register</Button>\n                    </div>\n                )}\n          </Box>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n}\nexport default TopBar;",["102","103","104","105","106","107"],"/Users/liyuqi/public_speaking_visualisation/frontend/src/register.js",[],[],"/Users/liyuqi/public_speaking_visualisation/frontend/src/Compare.js",[],[],"/Users/liyuqi/public_speaking_visualisation/frontend/src/compareWith.js",["108"],[],"/Users/liyuqi/public_speaking_visualisation/frontend/src/Step.js",[],[],"/Users/liyuqi/public_speaking_visualisation/frontend/src/profile.js",["109"],[],{"ruleId":"110","severity":1,"message":"111","line":70,"column":8,"nodeType":"112","endLine":70,"endColumn":29,"suggestions":"113"},{"ruleId":"110","severity":1,"message":"111","line":103,"column":4,"nodeType":"112","endLine":103,"endColumn":40,"suggestions":"114"},{"ruleId":"115","severity":1,"message":"116","line":9,"column":11,"nodeType":"117","messageId":"118","endLine":9,"endColumn":15},{"ruleId":"110","severity":1,"message":"111","line":88,"column":8,"nodeType":"112","endLine":88,"endColumn":29,"suggestions":"119"},{"ruleId":"110","severity":1,"message":"120","line":44,"column":6,"nodeType":"112","endLine":44,"endColumn":13,"suggestions":"121"},{"ruleId":"115","severity":1,"message":"122","line":1,"column":9,"nodeType":"117","messageId":"118","endLine":1,"endColumn":18},{"ruleId":"110","severity":1,"message":"123","line":31,"column":11,"nodeType":"124","endLine":42,"endColumn":2},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"110","severity":1,"message":"137","line":99,"column":12,"nodeType":"112","endLine":99,"endColumn":14,"suggestions":"138"},{"ruleId":"110","severity":1,"message":"111","line":19,"column":6,"nodeType":"112","endLine":19,"endColumn":8,"suggestions":"139"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'auth?.email'. Either include it or remove the dependency array.","ArrayExpression",["140"],["141"],"no-unused-vars","'auth' is assigned a value but never used.","Identifier","unusedVar",["142"],"React Hook useEffect has a missing dependency: 'wordsArray'. Either include it or remove the dependency array.",["143"],"'useEffect' is defined but never used.","The 'recoverAuthState' function makes the dependencies of useEffect Hook (at line 47) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'recoverAuthState' in its own useCallback() Hook.","VariableDeclarator","dot-location",[],"new-parens",[],"no-mixed-operators",[],"no-new-object",["144"],"no-whitespace-before-property",[],"rest-spread-spacing",[],"React Hook useEffect has missing dependencies: 'auth?.email', 'compare', and 'videoUUID'. Either include them or remove the dependency array.",["145"],["146"],{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"147","fix":"151"},{"desc":"152","fix":"153"},"no-object-constructor",{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},"Update the dependencies array to be: [auth?.email, navigate, videoUUID]",{"range":"158","text":"159"},"Update the dependencies array to be: [videoUUID, navigate, allowNavigate, auth?.email]",{"range":"160","text":"161"},{"range":"162","text":"159"},"Update the dependencies array to be: [words, wordsArray]",{"range":"163","text":"164"},"Update the dependencies array to be: [auth?.email, compare, videoUUID]",{"range":"165","text":"166"},"Update the dependencies array to be: [auth?.email]",{"range":"167","text":"168"},[2753,2774],"[auth?.email, navigate, videoUUID]",[3098,3134],"[videoUUID, navigate, allowNavigate, auth?.email]",[3843,3864],[1256,1263],"[words, wordsArray]",[2968,2970],"[auth?.email, compare, videoUUID]",[745,747],"[auth?.email]"]