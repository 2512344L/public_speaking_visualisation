{"ast":null,"code":"var _jsxFileName = \"/Users/liyuqi/ip/frontend/src/Questionnaire.js\";\nimport { TopBar } from \"./App\";\nimport Alert from '@mui/material/Alert';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport './questionnaire.css';\nimport { Card, Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Questionnaire = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TopBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      sx: {\n        width: '100%'\n      },\n      spacing: 5,\n      children: alertVisible && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"warning\",\n        onClose: () => {\n          setAlertVisible(false);\n        },\n        children: \"We are not able to collect your private information, these questions just help us to better analyse the results.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: \"Questionnaire\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"blockquote\", {\n          className: \"blockquote mb-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [' ', \"Please complete the following Questionnaire\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n            className: \"blockquote-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \" 1. What is your biological gender?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              children: ['radio'].map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: type,\n                  name: \"gender\",\n                  id: \"female\",\n                  label: \"Female\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 39\n                }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: type,\n                  name: \"gender\",\n                  label: `Male`,\n                  id: \"male\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 39\n                }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: type,\n                  name: \"gender\",\n                  label: `Perfer not to say`,\n                  id: \"pns\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 40\n                }, this)]\n              }, `default-${type}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 35\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \" 2. What is your age?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              children: ['radio'].map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: type,\n                  name: \"age\",\n                  id: \"u35\",\n                  label: \"Under 35\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 39\n                }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: type,\n                  name: \"age\",\n                  label: `35 - 60`,\n                  id: \"35to60\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 39\n                }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: type,\n                  name: \"age\",\n                  label: `Up to 60`,\n                  id: \"u60\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 40\n                }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: type,\n                  name: \"age\",\n                  label: `Perfer not to say`,\n                  id: \"pnsa\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 40\n                }, this)]\n              }, `default-${type}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 35\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"button\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                id: \"submit\",\n                variant: \"warning\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n_c = Questionnaire;\nexport default Questionnaire;\nvar _c;\n$RefreshReg$(_c, \"Questionnaire\");","map":{"version":3,"names":["TopBar","Alert","Button","Stack","Card","Form","jsxDEV","_jsxDEV","Fragment","_Fragment","Questionnaire","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","width","spacing","alertVisible","severity","onClose","setAlertVisible","Header","Body","className","map","type","Check","name","id","label","variant","_c","$RefreshReg$"],"sources":["/Users/liyuqi/ip/frontend/src/Questionnaire.js"],"sourcesContent":["import {TopBar} from \"./App\";\nimport Alert from '@mui/material/Alert';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport  './questionnaire.css';\nimport {Card, Form} from \"react-bootstrap\";\n\n\n\nconst Questionnaire = () => {\n\n  return (\n      <>\n          <TopBar/>\n          <Stack sx={{ width: '100%' }} spacing={5}>\n              {alertVisible &&(\n              <Alert severity=\"warning\"\n                     onClose={() => {setAlertVisible(false)}}>\n                  We are not able to collect your private information, these questions just help us to better analyse the results.</Alert>\n                  )}\n\n          </Stack>\n          <Card>\n              <Card.Header>Questionnaire</Card.Header>\n              <Card.Body>\n                  <blockquote className=\"blockquote mb-0\">\n                      <p>\n                          {' '}\n                          Please complete the following Questionnaire\n                      </p>\n                      <footer className=\"blockquote-footer\">\n                          <p> 1. What is your biological gender?</p>\n                          <Form>\n                              {['radio'].map((type) => (\n                                  <div key={`default-${type}`} className=\"mb-3\">\n                                      <Form.Check\n                                          type={type}\n                                          name={\"gender\"}\n                                          id={\"female\"}\n                                          label={\"Female\"}\n                                      />\n                                      <Form.Check\n                                          type={type}\n                                          name={\"gender\"}\n                                          label={`Male`}\n                                          id={\"male\"}\n                                      />\n                                       <Form.Check\n                                          type={type}\n                                           name={\"gender\"}\n                                          label={`Perfer not to say`}\n                                          id={\"pns\"}\n                                      />\n                                  </div>\n                              ))}\n                          </Form>\n                           <p> 2. What is your age?</p>\n                          <Form>\n                              {['radio'].map((type) => (\n                                  <div key={`default-${type}`} className=\"mb-3\">\n                                      <Form.Check\n                                          type={type}\n                                          name={\"age\"}\n                                          id={\"u35\"}\n                                          label={\"Under 35\"}\n                                      />\n                                      <Form.Check\n                                          type={type}\n                                          name={\"age\"}\n                                          label={`35 - 60`}\n                                          id={\"35to60\"}\n                                      />\n                                       <Form.Check\n                                          type={type}\n                                          name={\"age\"}\n                                          label={`Up to 60`}\n                                          id={\"u60\"}\n                                      />\n                                       <Form.Check\n                                          type={type}\n                                          name={\"age\"}\n                                          label={`Perfer not to say`}\n                                          id={\"pnsa\"}\n                                      />\n                                  </div>\n                              ))}\n                          </Form>\n                          <div id = \"button\">\n                              <Button id = \"submit\" variant=\"warning\">Submit</Button>\n                          </div>\n                      </footer>\n                  </blockquote>\n              </Card.Body>\n          </Card>\n      </>\n  );}\nexport default Questionnaire;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}